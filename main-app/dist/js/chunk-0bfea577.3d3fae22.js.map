{"version":3,"sources":["webpack:///../../../src/components/VDataTable/VSimpleTable.ts","webpack:///../../../src/components/VGrid/grid.ts","webpack:///../../../src/components/VGrid/VContainer.ts"],"names":["name","props","dense","fixedHeader","height","Number","String","computed","classes","this","$slots","themeClasses","methods","genWrapper","wrapper","$createElement","staticClass","style","render","h","class","functional","id","tag","type","default","children","data","attrs","Object","key","value","fluid","mergeData","Array"],"mappings":"4LAOe,qCAAyB,CACtCA,KADsC,iBAGtCC,MAAO,CACLC,MADK,QAELC,YAFK,QAGLC,OAAQ,CAACC,OAAQC,SAGnBC,SAAU,CACRC,QADQ,WAEN,uBACE,sBAAuBC,KADlB,MAEL,+BAAgCA,KAAF,SAAkBA,KAF3C,YAGL,6BAA8BA,KAHzB,YAIL,0BAA2BA,KAAKC,OAJ3B,IAKL,6BAA8BD,KAAKC,OAL9B,QAMFD,KAAKE,gBAKdC,QAAS,CACPC,WADO,WAEL,OAAOJ,KAAKC,OAAOI,SAAWL,KAAKM,eAAe,MAAO,CACvDC,YADuD,wBAEvDC,MAAO,CACLb,OAAQ,eAAcK,KAAD,UAEtB,CACDA,KAAKM,eAAe,QAASN,KAAKC,OANpC,aAWJQ,OAnCsC,SAmChC,GACJ,OAAOC,EAAE,MAAO,CACdH,YADc,eAEdI,MAAOX,KAAKD,SACX,CACDC,KAAKC,OADJ,IAEDD,KAFC,aAGDA,KAAKC,OANP,a,oLCxCU,cAEZ,OAAO,cAAW,CAChBV,KAAM,KAAF,OADY,GAGhBqB,YAHgB,EAKhBpB,MAAO,CACLqB,GADK,OAELC,IAAK,CACHC,KADG,OAEHC,QAAS,QAIbP,OAbgB,SAaV,EAbU,GAaoB,IAAzB,EAAyB,EAAzB,QAAyB,EAAzB,KAAeQ,EAAU,EAAVA,SACxBC,EAAA,YAAoB,UAAG3B,EAAH,YAAW2B,EAAA,aAAZ,IAAnB,OAEA,IAAQC,EAAR,EAAQA,MACR,KAAW,CAETD,EAAA,SACA,IAAMnB,EAAUqB,OAAA,gBAA0B,SAAAC,GAGxC,YAAIA,EAAgB,OAAO,EAE3B,IAAMC,EAAQH,EALgC,GAS9C,OAAIE,EAAA,WAAJ,UACEH,EAAA,YACA,GAGKI,GAAP,kBAAuBA,KAGrBvB,EAAJ,SAAoBmB,EAAA,wBAAwBnB,EAAA,KAAxB,OAQtB,OALIP,EAAJ,KACE0B,EAAA,SAAgBA,EAAA,UAAhB,GACAA,EAAA,YAAmB1B,EAAnB,IAGKkB,EAAElB,EAAD,MAAR,M,gBC1CS,6BAAyB,CACtCD,KADsC,cAEtCqB,YAFsC,EAGtCpB,MAAO,CACLqB,GADK,OAELC,IAAK,CACHC,KADG,OAEHC,QAAS,OAEXO,MAAO,CACLR,KADK,QAELC,SAAS,IAGbP,OAdsC,SAchC,EAdgC,GAcF,IAClC,EADS,EAAyB,EAAzB,QAAyB,EAAzB,KAAeQ,EAAU,EAAVA,SAEhBE,EAAR,EAAQA,MA2BR,OA1BA,IAEED,EAAA,SACAnB,EAAUqB,OAAA,gBAA0B,SAAAC,GAGlC,YAAIA,EAAgB,OAAO,EAE3B,IAAMC,EAAQH,EAL0B,GASxC,OAAIE,EAAA,WAAJ,UACEH,EAAA,YACA,GAGKI,GAAP,kBAAuBA,MAIvB9B,EAAJ,KACE0B,EAAA,SAAgBA,EAAA,UAAhB,GACAA,EAAA,YAAmB1B,EAAnB,IAGKkB,EACLlB,EADM,IAEN,OAAAgC,EAAA,MAAUN,EAAM,CACdX,YADc,YAEdI,MAAOc,MAAW,CAChB,mBAAoBjC,EAAM+B,QADrB,OAEGxB,GAFH,MAJX","file":"js/chunk-0bfea577.3d3fae22.js","sourcesContent":["import './VSimpleTable.sass'\n\nimport { convertToUnit } from '../../util/helpers'\nimport Themeable from '../../mixins/themeable'\nimport mixins from '../../util/mixins'\nimport { VNode } from 'vue'\n\nexport default mixins(Themeable).extend({\n  name: 'v-simple-table',\n\n  props: {\n    dense: Boolean,\n    fixedHeader: Boolean,\n    height: [Number, String],\n  },\n\n  computed: {\n    classes (): Record<string, boolean> {\n      return {\n        'v-data-table--dense': this.dense,\n        'v-data-table--fixed-height': !!this.height && !this.fixedHeader,\n        'v-data-table--fixed-header': this.fixedHeader,\n        'v-data-table--has-top': !!this.$slots.top,\n        'v-data-table--has-bottom': !!this.$slots.bottom,\n        ...this.themeClasses,\n      }\n    },\n  },\n\n  methods: {\n    genWrapper () {\n      return this.$slots.wrapper || this.$createElement('div', {\n        staticClass: 'v-data-table__wrapper',\n        style: {\n          height: convertToUnit(this.height),\n        },\n      }, [\n        this.$createElement('table', this.$slots.default),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-data-table',\n      class: this.classes,\n    }, [\n      this.$slots.top,\n      this.genWrapper(),\n      this.$slots.bottom,\n    ])\n  },\n})\n","// Types\nimport Vue, { VNode } from 'vue'\n\nexport default function VGrid (name: string) {\n  /* @vue/component */\n  return Vue.extend({\n    name: `v-${name}`,\n\n    functional: true,\n\n    props: {\n      id: String,\n      tag: {\n        type: String,\n        default: 'div',\n      },\n    },\n\n    render (h, { props, data, children }): VNode {\n      data.staticClass = (`${name} ${data.staticClass || ''}`).trim()\n\n      const { attrs } = data\n      if (attrs) {\n        // reset attrs to extract utility clases like pa-3\n        data.attrs = {}\n        const classes = Object.keys(attrs).filter(key => {\n          // TODO: Remove once resolved\n          // https://github.com/vuejs/vue/issues/7841\n          if (key === 'slot') return false\n\n          const value = attrs[key]\n\n          // add back data attributes like data-test=\"foo\" but do not\n          // add them as classes\n          if (key.startsWith('data-')) {\n            data.attrs![key] = value\n            return false\n          }\n\n          return value || typeof value === 'string'\n        })\n\n        if (classes.length) data.staticClass += ` ${classes.join(' ')}`\n      }\n\n      if (props.id) {\n        data.domProps = data.domProps || {}\n        data.domProps.id = props.id\n      }\n\n      return h(props.tag, data, children)\n    },\n  })\n}\n","import './_grid.sass'\nimport './VGrid.sass'\n\nimport Grid from './grid'\n\nimport mergeData from '../../util/mergeData'\n\n/* @vue/component */\nexport default Grid('container').extend({\n  name: 'v-container',\n  functional: true,\n  props: {\n    id: String,\n    tag: {\n      type: String,\n      default: 'div',\n    },\n    fluid: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  render (h, { props, data, children }) {\n    let classes\n    const { attrs } = data\n    if (attrs) {\n      // reset attrs to extract utility clases like pa-3\n      data.attrs = {}\n      classes = Object.keys(attrs).filter(key => {\n        // TODO: Remove once resolved\n        // https://github.com/vuejs/vue/issues/7841\n        if (key === 'slot') return false\n\n        const value = attrs[key]\n\n        // add back data attributes like data-test=\"foo\" but do not\n        // add them as classes\n        if (key.startsWith('data-')) {\n          data.attrs![key] = value\n          return false\n        }\n\n        return value || typeof value === 'string'\n      })\n    }\n\n    if (props.id) {\n      data.domProps = data.domProps || {}\n      data.domProps.id = props.id\n    }\n\n    return h(\n      props.tag,\n      mergeData(data, {\n        staticClass: 'container',\n        class: Array<any>({\n          'container--fluid': props.fluid,\n        }).concat(classes || []),\n      }),\n      children\n    )\n  },\n})\n"],"sourceRoot":""}